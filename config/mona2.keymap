#include <input/processors.dtsi>
#include <dt-bindings/zmk/input_transform.h>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>

#define ZMK_POINTING_DEFAULT_SCRL_VAL 100
#define MOUSE 5
#define SCROLL 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

&lt {
    quick-tap-ms = <300>;
    flavor = "balanced";
};

/ {
    combos {
        compatible = "zmk,combos";

        layer4_ESC {
            bindings = <&lt 4 ESC>;
            key-positions = <39 38>;
        };

        tab {
            bindings = <&kp TAB>;
            key-positions = <11 12>;
        };

        mbLeft {
            bindings = <&mkp MB1>;
            key-positions = <17 18>;
        };

        mbRight {
            bindings = <&mkp MB2>;
            key-positions = <18 19>;
        };

        mbMiddle {
            bindings = <&mkp MB3>;
            key-positions = <17 19>;
        };

        Cp {
            bindings = <&kp LC(C)>;
            key-positions = <22 23>;
        };

        Pst {
            bindings = <&kp LC(V)>;
            key-positions = <23 24>;
        };

        SelectAll {
            bindings = <&kp LC(A)>;
            key-positions = <22 24>;
        };

        RightTab {
            bindings = <&kp LC(TAB)>;
            key-positions = <2 3>;
        };

        LeftTab {
            bindings = <&kp LS(LC(TAB))>;
            key-positions = <1 2>;
        };

        ScreenShot {
            bindings = <&kp LG(LS(S))>;
            key-positions = <10 11>;
        };

        mb1-copy {
            bindings = <&mkp MB1>;
            key-positions = <6 7>;
        };

        mb2-copy {
            bindings = <&mkp MB2>;
            key-positions = <7 8>;
        };

        mb3-copy {
            bindings = <&mkp MB3>;
            key-positions = <6 8>;
        };

        SftTAB {
            bindings = <&kp LS(TAB)>;
            key-positions = <12 13>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        scroll_up_down: mouse_wheel_up_down {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

            tap-ms = <20>;
        };

        scroll_right_left: mouse_wheel_right_left {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_RIGHT>, <&msc SCRL_LEFT>;

            tap-ms = <20>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&mt LALT Q        &kp W         &kp E         &kp R          &kp T                                                                                &kp Y        &kp U  &kp I      &kp O    &mt RALT P
&mt LCTRL A       &kp S         &kp D         &kp F          &kp G                                             &out OUT_BLE                       &kp H        &kp J  &kp K      &kp L    &mt RCTRL SEMI
&mt LEFT_SHIFT Z  &kp X         &kp C         &kp V          &kp B        &kp DEL                              &out OUT_USB                       &kp N        &kp M  &kp COMMA  &kp DOT  &mt RSHFT SLASH
&kp LCTRL         &kp LEFT_WIN  &kp CAPSLOCK  &kp BACKSPACE  &lt 1 SPACE  &lt_to_layer_0 3 LS(LA(NUMBER_0))    &lt_to_layer_0 3 LA(LS(NUMBER_1))  &lt 2 ENTER                             &kp LEFT_ALT
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        layer_1 {
            bindings = <
&kp LC(LG(LEFT))  &kp HOME   &kp UP    &kp END    &kp LG(LC(RIGHT))                            &kp KP_MULTIPLY  &kp KP_N7  &kp KP_N8  &kp KP_N9  &kp KP_DIVIDE
&kp LG(LEFT)      &kp LEFT   &kp DOWN  &kp RIGHT  &kp LG(RIGHT)                &kp KP_NUMLOCK  &kp KP_PLUS      &kp KP_N4  &kp KP_N5  &kp KP_N6  &kp KP_MINUS
&trans            &kp PG_UP  &trans    &kp PG_DN  &trans             &trans    &trans          &kp KP_EQUAL     &kp KP_N1  &kp KP_N2  &kp KP_N3  &kp KP_DOT
&trans            &trans     &trans    &trans     &trans             &trans    &trans          &kp KP_N0                                         &kp KP_ENTER
            >;

            sensor-bindings = <&scroll_right_left>;
        };

        layer_2 {
            bindings = <
&kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp N5                      &kp NUMBER_6  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp NUMBER_0
&kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp N5             &trans   &kp NUMBER_6  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp NUMBER_0
&kp F1        &kp F2        &kp F3        &kp F4        &kp F5  &kp F11    &kp F12  &kp F6        &kp F7        &kp F8        &kp F9        &kp F10
&trans        &trans        &trans        &trans        &trans  &trans     &trans   &trans                                                  &trans
            >;

            sensor-bindings = <&scroll_right_left>;
        };

        layer_3 {
            bindings = <
&kp EXCLAMATION  &kp AT_SIGN  &kp POUND             &kp DOLLAR             &kp PERCENT                    &kp CARET      &kp AMPERSAND     &kp ASTERISK       &kp MINUS  &kp UNDERSCORE
&kp GRAVE        &kp TILDE    &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp PIPE               &trans  &kp BACKSLASH  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp SQT    &kp DQT
&trans           &trans       &kp LESS_THAN         &kp GREATER_THAN       &trans       &trans    &trans  &trans         &kp LEFT_BRACE    &kp RIGHT_BRACE    &trans     &trans
&trans           &trans       &trans                &trans                 &trans       &trans    &trans  &trans                                                         &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        layer_4 {
            bindings = <
&trans  &trans  &trans  &trans        &trans                         &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans  &trans  &out OUT_BLE  &trans            &trans       &trans        &out OUT_USB  &trans        &trans        &trans
&trans  &trans  &trans  &trans        &trans  &trans    &bootloader  &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &trans  &trans  &trans        &trans  &trans    &trans       &trans                                                  &bt BT_CLR_ALL
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        MOUSE {
            bindings = <
&trans  &trans    &trans    &trans    &trans                    &trans  &trans    &trans    &trans    &trans
&trans  &mkp MB3  &mkp MB2  &mkp MB1  &trans            &trans  &trans  &mkp MB1  &mkp MB2  &mkp MB3  &trans
&trans  &trans    &trans    &trans    &trans  &trans    &trans  &trans  &trans    &trans    &trans    &trans
&trans  &trans    &trans    &trans    &trans  &trans    &trans  &trans                                &trans
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans                          &trans
            >;

            sensor-bindings = <&scroll_up_down>;
        };
    };
};
